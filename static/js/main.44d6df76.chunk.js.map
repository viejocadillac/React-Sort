{"version":3,"sources":["components/ShowAlgorithm/ShowAlgorithm.jsx","components/Graph/Graph.jsx","components/Controls/Controls.jsx","utils.js","components/BubbleSort/BubbleSort.jsx","components/App/App.jsx","index.jsx"],"names":["ShowAlgorithm","defAlgoritmo","algoritmos","items","React","useState","selectedAlgoritmo","setSelectedAlgoritmo","value","name","id","onChange","event","target","map","algoritmo","key","cloneElement","component","Column","height","i","className","style","Graph","array","length","num","Controls","randomize","sort","stopSorting","isSorting","type","disabled","onClick","swap","a","b","arr","concat","auxB","arrayFillRandom","max","push","Math","floor","random","sleep","milis","Promise","resolve","setTimeout","BubbleSort","maxValue","isMountedOrSorting","useRef","setRandom","setIsSorting","useEffect","current","async","x","console","log","defaultProps","App","defaultAlgoritmo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44d6df76.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ShowAlgorithm = ({ defAlgoritmo, algoritmos, items }) => {\n  const [selectedAlgoritmo, setSelectedAlgoritmo] = React.useState(defAlgoritmo);\n\n  const optionSelected = (event) => {\n    setSelectedAlgoritmo(event.target.value);\n  };\n\n  return (\n    <>\n      <select value={selectedAlgoritmo} name=\"selectAlgoritmo\" id=\"select\" onChange={optionSelected}>\n        {\n          algoritmos.map((algoritmo) => (\n            <option\n              key={`option-${algoritmo.value}`}\n              value={algoritmo.value}\n            >\n              {algoritmo.name}\n            </option>\n          ))\n        }\n      </select>\n      {\n        algoritmos.map((algoritmo) => {\n          if (algoritmo.value === selectedAlgoritmo) {\n            return React.cloneElement(algoritmo.component, { items, key: algoritmo.value }, null);\n          }\n          return null;\n        })\n      }\n    </>\n  );\n};\n\n\nShowAlgorithm.propTypes = {\n  defAlgoritmo: PropTypes.string.isRequired,\n  algoritmos: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    name: PropTypes.string,\n    component: PropTypes.element,\n  })).isRequired,\n  items: PropTypes.number.isRequired,\n};\n\n\nexport default ShowAlgorithm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Graph.scss';\n\nconst Column = ({ height, i }) => <div key={`${height}-${i}`} className=\"columna\" style={{ height }} />;\nColumn.propTypes = {\n  height: PropTypes.number.isRequired,\n  i: PropTypes.number.isRequired,\n};\n\n\nconst Graph = ({ array }) => (\n  <div className=\"container\">\n    {array.length > 1\n      ? array.map((num, i) => <Column key={`column-${num}-${i + 1}`} height={num} className=\"columna\" i={i} />)\n      : null}\n  </div>\n);\n\nGraph.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Graph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Controls.scss';\n\nconst Controls = ({\n  randomize,\n  sort,\n  stopSorting,\n  isSorting,\n}) => (\n  <div className=\"controls\">\n    <input type=\"button\" disabled={isSorting} value=\"Randomize\" onClick={randomize} />\n    <input type=\"button\" disabled={isSorting} value=\"Sort\" onClick={sort} />\n    <input type=\"button\" disabled={!isSorting} value=\"Stop\" onClick={stopSorting} />\n  </div>\n);\n\nControls.propTypes = {\n  randomize: PropTypes.func.isRequired,\n  sort: PropTypes.func.isRequired,\n  stopSorting: PropTypes.func.isRequired,\n  isSorting: PropTypes.bool.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable no-plusplus */\nconst swap = (array, a, b) => {\n  const arr = [].concat(array);\n  const auxB = arr[b];\n  arr[b] = arr[a];\n  arr[a] = auxB;\n  return arr;\n};\n\n/**\n * Genera un array de numeros alaeatorios\n * @param {number} length TamaÃ±o del array a generar\n * @param {number} max Valor maximo de los numeros aleatorios\n * @returns {number[]} Array con valores aleatorios\n */\nconst arrayFillRandom = (length, max) => {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push(Math.floor(Math.random() * max) + 1);\n  }\n  return arr;\n};\n\nconst sleep = (milis) => new Promise((resolve) => setTimeout(resolve, milis));\n\nexport { swap, arrayFillRandom, sleep };\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from '../Graph/Graph';\nimport Controls from '../Controls/Controls';\n\nimport { sleep, arrayFillRandom, swap } from '../../utils';\n\n\nconst BubbleSort = ({ items, milis, maxValue }) => {\n  const isMountedOrSorting = React.useRef(true);\n\n  const [random, setRandom] = React.useState(arrayFillRandom(items, maxValue));\n  const [isSorting, setIsSorting] = React.useState(false);\n\n\n  React.useEffect(() => {\n    isMountedOrSorting.current = true;\n\n    return () => {\n      // clean\n      isMountedOrSorting.current = false;\n    };\n  }, []);\n\n  const randomize = () => {\n    setRandom(arrayFillRandom(items, maxValue));\n  };\n\n  const stopSorting = () => {\n    isMountedOrSorting.current = false;\n  };\n\n  const bubbleSort = async () => {\n    isMountedOrSorting.current = true;\n    setIsSorting(true);\n\n    let arr = [].concat(random);\n\n    for (let i = 0; i <= arr.length; i++) {\n      for (let x = 0; x <= arr.length; x++) {\n        if (arr[x] >= arr[x + 1]) {\n          // eslint-disable-next-line no-await-in-loop\n          await sleep(milis);\n          arr = swap(arr, x, x + 1);\n\n          if (isMountedOrSorting.current) {\n            setRandom(arr);\n          } else {\n            setIsSorting(false);\n            return;\n          }\n        }\n      }\n    }\n    isMountedOrSorting.current = false;\n    setIsSorting(false);\n    console.log('Ordenamiento con Bubble Sort finalizado');\n  };\n\n  return (\n    <>\n      <Graph array={random} />\n      <Controls\n        randomize={randomize}\n        sort={bubbleSort}\n        stopSorting={stopSorting}\n        isSorting={isSorting}\n      />\n    </>\n  );\n};\n\nBubbleSort.propTypes = {\n  items: PropTypes.number,\n  milis: PropTypes.number,\n  maxValue: PropTypes.number,\n};\n\nBubbleSort.defaultProps = {\n  items: 50,\n  milis: 100,\n  maxValue: 500,\n};\n\nexport default BubbleSort;\n","import React from 'react';\nimport './App.scss';\n\nimport ShowAlgorithm from '../ShowAlgorithm/ShowAlgorithm';\nimport BubbleSort from '../BubbleSort/BubbleSort';\n\n\nconst algoritmos = [\n  {\n    value: 'bubblesort',\n    name: 'Bubble Sort',\n    component: <BubbleSort milis={20} maxValue={500} />,\n  },\n];\n\nfunction App() {\n  const defaultAlgoritmo = algoritmos[0].value;\n  return (\n    <div className=\"App\">\n      <ShowAlgorithm algoritmos={algoritmos} defAlgoritmo={defaultAlgoritmo} items={50} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}