{"version":3,"sources":["components/ShowAlgorithm/ShowAlgorithm.jsx","components/Graph/Graph.jsx","components/Buttons/Buttons.jsx","components/Controls/Controls.jsx","utils.js","components/BubbleSort/BubbleSort.jsx","components/App/App.jsx","index.jsx"],"names":["Dropdown","styled","div","DropdownContent","props","show","DropdownButton","button","DropdownOption","a","ShowAlgorithm","defAlgoritmo","algoritmos","items","React","useState","selectedAlgoritmo","setSelectedAlgoritmo","showDrop","setShowDrop","style","height","onMouseEnter","onMouseLeave","name","map","algoritmo","key","value","onClick","optionSelected","cloneElement","component","Column","i","className","Graph","array","length","num","StyledButton","AButton","animated","AnimatedButtonPrimary","theme","primaryColor","hovered","setHovered","opacity","useSpring","config","mass","tension","friction","from","to","disabled","transform","onMouseOut","WrapperControls","Controls","randomize","sort","stopSorting","isSorting","swap","b","arr","concat","auxB","arrayFillRandom","max","push","Math","floor","random","sleep","milis","Promise","resolve","setTimeout","BubbleSort","maxValue","isMountedOrSorting","useRef","setRandom","setIsSorting","useEffect","current","display","flexDirection","justifyContent","async","x","console","log","defaultProps","App","defaultAlgoritmo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e14e3276.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Dropdown = styled.div`\nposition: fixed;\nmargin-top: 1em;\nmargin-left: 2em;\ndisplay: inline-block;\n`;\n\nconst DropdownContent = styled.div`\ndisplay: ${(props) => (props.show ? 'block' : 'none')};\nposition: absolute;\nbackground-color: #f1f1f1;\nwidth: 100%;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n`;\n\n\nconst DropdownButton = styled.button`\n  background-color: transparent;\n  color: white;\n  padding: 0.5em 1em;\n  font-size: 16px;\n  //border: none;\n  border: 2px solid;\n  border-radius: 3px;\n  margin-bottom: 0.5em;\n  &:after{\n    content: '';\n    border: 4px solid transparent;\n    border-top: 4px solid white;\n    margin-left: 20px;\n    margin-bottom: 3px;\n    display: inline-block;\n    vertical-align: bottom;\n  }\n`;\n\nconst DropdownOption = styled.a`\ncolor: black;\npadding: 12px 16px;\nfont-family: Arial;\ntext-decoration: none;\ndisplay: block;\n\n&:hover{\n  cursor: pointer;\n  background-color: grey;\n}\n`;\n\n\nconst ShowAlgorithm = ({ defAlgoritmo, algoritmos, items }) => {\n  const [selectedAlgoritmo, setSelectedAlgoritmo] = React.useState(defAlgoritmo);\n  const [showDrop, setShowDrop] = React.useState(false);\n\n  const optionSelected = (algoritmo) => {\n    setSelectedAlgoritmo(algoritmo);\n  };\n\n  return (\n    <div style={{height:'100vh'}}>\n\n      <Dropdown onMouseEnter={() => setShowDrop(true)} onMouseLeave={() => setShowDrop(false)}>\n        <DropdownButton>{selectedAlgoritmo.name}</DropdownButton>\n        <DropdownContent show={showDrop}>\n          {\n            algoritmos.map((algoritmo) => (\n              <DropdownOption\n                key={algoritmo.value}\n                value={algoritmo.value}\n                onClick={() => optionSelected(algoritmo) }\n              >\n                {algoritmo.name}\n              </DropdownOption>\n            ))\n          }\n        </DropdownContent>\n      </Dropdown>\n\n      {\n        algoritmos.map((algoritmo) => {\n          if (algoritmo.value === selectedAlgoritmo.value) {\n            return React.cloneElement(algoritmo.component, { items, key: algoritmo.value }, null);\n          }\n          return null;\n        })\n      }\n    </div>\n  );\n};\n\n\nShowAlgorithm.propTypes = {\n  defAlgoritmo: PropTypes.shape({\n    value: PropTypes.string,\n    name: PropTypes.string,\n    component: PropTypes.element,\n  }).isRequired,\n  algoritmos: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    name: PropTypes.string,\n    component: PropTypes.element,\n  })).isRequired,\n  items: PropTypes.number.isRequired,\n};\n\n\nexport default ShowAlgorithm;\n\n\n/*\n\n     <Select value={selectedAlgoritmo} name=\"selectAlgoritmo\" id=\"select\" onChange={optionSelected}>\n        {\n          algoritmos.map((algoritmo) => (\n            <Option\n              key={`option-${algoritmo.value}`}\n              value={algoritmo.value}\n            >\n              {algoritmo.name}\n            </Option>\n          ))\n        }\n      </Select>\n\n\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Graph.scss';\n\nconst Column = ({ height, i }) => <div key={`${height}-${i}`} className=\"columna\" style={{ height }} />;\nColumn.propTypes = {\n  height: PropTypes.number.isRequired,\n  i: PropTypes.number.isRequired,\n};\n\n\nconst Graph = ({ array }) => (\n  <div className=\"container\">\n    {array.length > 1\n      ? array.map((num, i) => <Column key={`column-${num}-${i + 1}`} height={num} className=\"columna\" i={i} />)\n      : null}\n  </div>\n);\n\nGraph.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Graph;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { animated, useSpring } from 'react-spring';\n\nconst StyledButton = styled.button`\n    box-sizing: border-box;\n    color: Grey;\n    text-transform: uppercase;\n    background-color: transparent;\n    padding: 0.5em 2em;\n    margin: 1em 1em;\n    border: 2px solid Grey;\n    font-weight: bold;\n    opacity:0.5;\n    border-radius: 3px;\n\n    &:enabled {\n      cursor: pointer;\n      opacity: 1;\n    }\n`;\n\n\nconst AButton = animated(StyledButton);\nconst AnimatedButton = (props) => {\n  const [hovered, setHovered] = React.useState(false)\n  const {opacity} = useSpring({\n    config: {mass:3, tension:100, friction:5},\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: props.disabled ? 0.5: 1,\n     \n    },\n  })\n\n  const {transform} = useSpring({\n    config: {mass:3, tension:200, friction:5},\n    from:{\n      transform: `scale(1)`\n    },\n    to: {\n      transform: `scale(${hovered ? 1.1 : 1})`\n    },\n  })\n\n  const style = props.disabled ? {opacity} : {opacity, transform}\n    \n\n  return (\n    <AButton\n      onMouseEnter={()=>setHovered(true)}\n      onMouseOut={()=>{setHovered(false)}}\n      style={style}\n      {...props} \n    >\n    </AButton>\n  )\n}\n\n\nconst ButtonPrimary = styled(StyledButton)`\n    &:enabled {\n    &:hover{\n        //background-color: Yellow;\n    }\n    }\n    border-color: ${(props) => props.theme.primaryColor};\n    color: ${(props) => props.theme.primaryColor};\n`;\n\nconst AnimatedButtonPrimary = styled(AnimatedButton)`\n    border-color: ${(props) => props.theme.primaryColor};\n    color: ${(props) => props.theme.primaryColor};\n`;\n\n\nexport {\n  ButtonPrimary,\n  AnimatedButton,\n  AnimatedButtonPrimary,\n  StyledButton,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { AnimatedButton, AnimatedButtonPrimary } from '../Buttons/Buttons';\nimport './Controls.scss';\n\nconst theme = {\n  primaryColor: 'Yellow',\n};\n\nconst WrapperControls = styled.div`\n  text-align: center;\n  display:flex;\n  justify-content: center;\n  margin-bottom: 3em;\n`;\n\nconst Controls = ({\n  randomize,\n  sort,\n  stopSorting,\n  isSorting,\n}) => (\n\n  <ThemeProvider theme={theme}>\n    <WrapperControls>\n      <AnimatedButtonPrimary disabled={isSorting} onClick={randomize}>Mezclar</AnimatedButtonPrimary>\n      <AnimatedButtonPrimary disabled={isSorting} onClick={sort}>Ordenar</AnimatedButtonPrimary>\n      <AnimatedButtonPrimary disabled={!isSorting} onClick={stopSorting}>Parar</AnimatedButtonPrimary>\n    </WrapperControls>\n  </ThemeProvider>\n\n\n);\n\nControls.propTypes = {\n  randomize: PropTypes.func.isRequired,\n  sort: PropTypes.func.isRequired,\n  stopSorting: PropTypes.func.isRequired,\n  isSorting: PropTypes.bool.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable no-plusplus */\nconst swap = (array, a, b) => {\n  const arr = [].concat(array);\n  const auxB = arr[b];\n  arr[b] = arr[a];\n  arr[a] = auxB;\n  return arr;\n};\n\n/**\n * Genera un array de numeros alaeatorios\n * @param {number} length Tamaño del array a generar\n * @param {number} max Valor maximo de los numeros aleatorios\n * @returns {number[]} Array con valores aleatorios\n */\nconst arrayFillRandom = (length, max) => {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push(Math.floor(Math.random() * max) + 1);\n  }\n  return arr;\n};\n\nconst sleep = (milis) => new Promise((resolve) => setTimeout(resolve, milis));\n\nexport { swap, arrayFillRandom, sleep };\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from '../Graph/Graph';\nimport Controls from '../Controls/Controls';\n\nimport { sleep, arrayFillRandom, swap } from '../../utils';\n\n\nconst BubbleSort = ({ items, milis, maxValue }) => {\n  const isMountedOrSorting = React.useRef(true);\n\n  const [random, setRandom] = React.useState(arrayFillRandom(items, maxValue));\n  const [isSorting, setIsSorting] = React.useState(false);\n\n\n  React.useEffect(() => {\n    isMountedOrSorting.current = true;\n\n    return () => {\n      // clean\n      isMountedOrSorting.current = false;\n    };\n  }, []);\n\n  const randomize = () => {\n    setRandom(arrayFillRandom(items, maxValue));\n  };\n\n  const stopSorting = () => {\n    isMountedOrSorting.current = false;\n  };\n\n  const bubbleSort = async () => {\n    isMountedOrSorting.current = true;\n    setIsSorting(true);\n\n    let arr = [].concat(random);\n\n    for (let i = 0; i <= arr.length; i++) {\n      for (let x = 0; x <= arr.length; x++) {\n        if (arr[x] >= arr[x + 1]) {\n          // eslint-disable-next-line no-await-in-loop\n          await sleep(milis);\n          arr = swap(arr, x, x + 1);\n\n          if (isMountedOrSorting.current) {\n            setRandom(arr);\n          } else {\n            setIsSorting(false);\n            return;\n          }\n        }\n      }\n    }\n    isMountedOrSorting.current = false;\n    setIsSorting(false);\n    console.log('Ordenamiento con Bubble Sort finalizado');\n  };\n\n  return (\n    <div style={{height:'100%', display:'flex', flexDirection:'column', justifyContent:'space-between'}}>\n      <Graph array={random} />\n      <Controls\n        randomize={randomize}\n        sort={bubbleSort}\n        stopSorting={stopSorting}\n        isSorting={isSorting}\n      />\n    </div>\n  );\n};\n\nBubbleSort.propTypes = {\n  items: PropTypes.number,\n  milis: PropTypes.number,\n  maxValue: PropTypes.number,\n};\n\nBubbleSort.defaultProps = {\n  items: 50,\n  milis: 100,\n  maxValue: 500,\n};\n\nexport default BubbleSort;\n","import React from 'react';\nimport './App.scss';\n\nimport ShowAlgorithm from '../ShowAlgorithm/ShowAlgorithm';\nimport BubbleSort from '../BubbleSort/BubbleSort';\n\n\nconst algoritmos = [\n  {\n    value: 'bubblesort',\n    name: 'Bubble Sort',\n    component: <BubbleSort milis={20} maxValue={400} />,\n  },\n  {\n    value: 'bubblesort2',\n    name: 'Bubble Sort 2',\n    component: <BubbleSort milis={20} maxValue={400} />,\n  },\n];\n\nfunction App() {\n  const defaultAlgoritmo = algoritmos[0];\n  return (\n    <div className=\"App\">\n      <ShowAlgorithm algoritmos={algoritmos} defAlgoritmo={defaultAlgoritmo} items={50} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}